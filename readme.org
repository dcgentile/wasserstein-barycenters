#+title: Readme
#+author: David Gentile
#+date: <2023-12-03 Sun>

This repository contains code which mostly serves as an exercise in using iterative methods to approximate Wasserstein barycenters and to consider the question of geodesic closure of a set of such barycenters for a fixed family of (centered Gaussian) measures.

gaussbarys.py contains the functions necessary for the computations, that is
- an implementation of the iterative scheme for approximating a Wasserstein barycenter as described in Alvarez-Esteban et al. (2016)
- an implementation of the scheme described in Werenski et al. (2022) for recovering barycentric coordinates of a target measure given a set of references
  rather than solving the quadratic program described in that paper, we instead search for eigenvectors with eigenvalue 0

currently main requires two command line arguments: the number of reference measures to generate, and the dimension of the matrices

example usage:

python3 main.py 2, 4

outputs:
the results of two tests:
1) a sanity check: if we compute just a single barycenter, we should be able to recover it's barycentric coordinates
   - generates 2 positive definite covariance matrices of size 4 x 4 and a random point in the simplex l0,
   - computes nu = bar({mu_i}, l0)
   - attempts to recover the barycentric coordinates l1 = coords({mu_i}, nu)
   - computes the Frobenius norm of (nu - bar({mu_i}, l1))
   - we expect this value to be close to 0
2) measure the discrepancy between a point along a geodesic connecting two barycenters and the barycentric approximation of that point
   - compute two barycenters and a point along the induced geodesic (call that point nu)
   - try to recover the barycentric coordinates l1 of nu
   - output the Frobenius norm of (nu - bar({mu_i}, l1)). If barycentric sets are closed, we should see small numbers here.
